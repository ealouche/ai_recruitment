#!/bin/bash

# Script de dÃ©marrage pour AI Recruiting CV Upload Service
# Ce script dÃ©marre le backend et le frontend en parallÃ¨le

echo "ðŸš€ DÃ©marrage d'AI Recruiting CV Upload Service"
echo "================================================"

# Fonction pour afficher les messages avec couleurs
print_status() {
    echo -e "\033[1;34m[INFO]\033[0m $1"
}

print_success() {
    echo -e "\033[1;32m[SUCCESS]\033[0m $1"
}

print_error() {
    echo -e "\033[1;31m[ERROR]\033[0m $1"
}

# VÃ©rification des prÃ©requis
print_status "VÃ©rification des prÃ©requis..."

# VÃ©rifier Python
if ! command -v python3 &> /dev/null; then
    print_error "Python 3 n'est pas installÃ©"
    exit 1
fi

# VÃ©rifier Node.js
if ! command -v node &> /dev/null; then
    print_error "Node.js n'est pas installÃ©"
    exit 1
fi

# VÃ©rifier npm
if ! command -v npm &> /dev/null; then
    print_error "npm n'est pas installÃ©"
    exit 1
fi

print_success "PrÃ©requis validÃ©s âœ“"

# Installation des dÃ©pendances backend
print_status "Installation des dÃ©pendances backend..."
cd backend
if [ ! -d "venv" ]; then
    python3 -m venv venv
    print_status "Environnement virtuel crÃ©Ã©"
fi

source venv/bin/activate
pip install -r requirements.txt > /dev/null 2>&1
if [ $? -eq 0 ]; then
    print_success "DÃ©pendances backend installÃ©es âœ“"
else
    print_error "Erreur lors de l'installation des dÃ©pendances backend"
    exit 1
fi
cd ..

# Installation des dÃ©pendances frontend
print_status "Installation des dÃ©pendances frontend..."
cd frontend
npm install > /dev/null 2>&1
if [ $? -eq 0 ]; then
    print_success "DÃ©pendances frontend installÃ©es âœ“"
else
    print_error "Erreur lors de l'installation des dÃ©pendances frontend"
    exit 1
fi
cd ..

# CrÃ©ation des dossiers uploads
print_status "CrÃ©ation des dossiers uploads..."
mkdir -p backend/uploads/cv
mkdir -p backend/uploads/data
print_success "Dossiers uploads crÃ©Ã©s âœ“"

# Fonction pour nettoyer les processus en arriÃ¨re-plan
cleanup() {
    print_status "ArrÃªt des services..."
    if [ ! -z "$BACKEND_PID" ]; then
        kill $BACKEND_PID 2>/dev/null
    fi
    if [ ! -z "$FRONTEND_PID" ]; then
        kill $FRONTEND_PID 2>/dev/null
    fi
    exit 0
}

# Capturer Ctrl+C pour nettoyer proprement
trap cleanup SIGINT

echo ""
print_status "DÃ©marrage des services..."

# DÃ©marrage du backend
print_status "DÃ©marrage du backend FastAPI..."
cd backend
source venv/bin/activate
python start.py &
BACKEND_PID=$!
cd ..

# Attendre un peu pour que le backend dÃ©marre
sleep 3

# DÃ©marrage du frontend
print_status "DÃ©marrage du frontend React..."
cd frontend
npm run dev &
FRONTEND_PID=$!
cd ..

# Attendre un peu pour que le frontend dÃ©marre
sleep 3

echo ""
print_success "Services dÃ©marrÃ©s avec succÃ¨s !"
echo ""
echo "ðŸ“± Frontend (React + Vite):  http://localhost:5173"
echo "ðŸ”§ Backend (FastAPI):       http://localhost:8000"
echo "ðŸ“š Documentation API:       http://localhost:8000/docs"
echo ""
echo "ðŸ’¡ Pour arrÃªter les services, appuyez sur Ctrl+C"
echo ""

# Attendre que les processus se terminent
wait $BACKEND_PID $FRONTEND_PID 